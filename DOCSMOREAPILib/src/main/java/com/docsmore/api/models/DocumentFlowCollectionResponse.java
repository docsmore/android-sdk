/*
 * DOCSMOREAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.docsmore.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class DocumentFlowCollectionResponse 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 4796233651981841956L;
    private String id;
    private String flowName;
    private Object userid;
    private String primaryKey;
    private String firstNameKey;
    private String lastNameKey;
    private String apikey;
    private String createdOn;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("_id")
    public String getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("_id")
    public void setId (String value) { 
        this.id = value;
        notifyObservers(this.id);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("flowName")
    public String getFlowName ( ) { 
        return this.flowName;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("flowName")
    public void setFlowName (String value) { 
        this.flowName = value;
        notifyObservers(this.flowName);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("userid")
    public Object getUserid ( ) { 
        return this.userid;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("userid")
    public void setUserid (Object value) { 
        this.userid = value;
        notifyObservers(this.userid);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("primaryKey")
    public String getPrimaryKey ( ) { 
        return this.primaryKey;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("primaryKey")
    public void setPrimaryKey (String value) { 
        this.primaryKey = value;
        notifyObservers(this.primaryKey);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("firstNameKey")
    public String getFirstNameKey ( ) { 
        return this.firstNameKey;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("firstNameKey")
    public void setFirstNameKey (String value) { 
        this.firstNameKey = value;
        notifyObservers(this.firstNameKey);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("lastNameKey")
    public String getLastNameKey ( ) { 
        return this.lastNameKey;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("lastNameKey")
    public void setLastNameKey (String value) { 
        this.lastNameKey = value;
        notifyObservers(this.lastNameKey);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("apikey")
    public String getApikey ( ) { 
        return this.apikey;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("apikey")
    public void setApikey (String value) { 
        this.apikey = value;
        notifyObservers(this.apikey);
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("createdOn")
    public String getCreatedOn ( ) { 
        return this.createdOn;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("createdOn")
    public void setCreatedOn (String value) { 
        this.createdOn = value;
        notifyObservers(this.createdOn);
    }
 
}
 