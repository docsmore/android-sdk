/*
 * DOCSMOREAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.docsmore.api.controllers;

import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;
import android.test.suitebuilder.annotation.LargeTest;

import static org.junit.Assert.*;

import java.io.*;
import java.util.*;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.docsmore.api.models.*;
import com.docsmore.api.exceptions.*;
import com.docsmore.api.APIHelper;
import com.docsmore.api.Configuration;
import com.docsmore.api.testing.TestHelper;
import com.docsmore.api.controllers.DOCUMENTFLOWSController;
import com.docsmore.api.controllers.syncwrapper.APICallBackCatcher;

import com.fasterxml.jackson.core.type.TypeReference;

@RunWith(AndroidJUnit4.class)
@LargeTest
public class DOCUMENTFLOWSControllerTest extends ControllerTestBase {
    
    /**
     * Controller instance (for all tests)
     */
    private static DOCUMENTFLOWSController controller;
    
    /**
     * Setup test class
     */
    @BeforeClass
    public static void setUpClass() {
        Configuration.initialize(InstrumentationRegistry.getContext());
        controller = getClient().getDOCUMENTFLOWS();
    }

    /**
     * Tear down test class
     * @throws IOException
     */
    @AfterClass
    public static void tearDownClass() throws IOException {
        controller = null;
    }

    /**
     * Testcase for testing endpoint Document Flow Collection
     * @throws Throwable
     */
    @Test
    public void testDocumentFlowCollection11() throws Throwable {

        // Set callback and perform API call
        List<DocumentFlowCollectionResponse> result = null;
        APICallBackCatcher<List<DocumentFlowCollectionResponse>> response = new APICallBackCatcher<List<DocumentFlowCollectionResponse>>();
        controller.setHttpCallBack(httpResponse);
        controller.getDocumentFlowCollectionAsync(response);
        result = response.getResult();

       // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test headers
        Map<String, String> headers = new LinkedHashMap<String, String>();
        headers.put("Content-Type", TestHelper.nullString);
        
        assertTrue("Headers do not match", TestHelper.areHeadersProperSubsetOf(
                headers, httpResponse.getResponse().getHeaders(), true));

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertEquals("Response body does not match exactly",
                "[{\"_id\":\"58fa4b45b3611e0d28000020\",\"flowName\":\"Bathroom remodeling project\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{Document Flow API Key}\",\"createdOn\":\"\\\"2017-04-21T18:11:17.126Z\\\"\"},{\"_id\":\"58fa4bb9b3611e0d28000021\",\"flowName\":\"Kitchen remodeling project\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{Document Flow API Key}\",\"createdOn\":\"\\\"2017-04-21T18:13:13.527Z\\\"\"},{\"_id\":\"58fa6cd0b3611e0d2800006f\",\"flowName\":\"Office Paper works\",\"userid\":{\"_id\":\"58fa0ab6b3611e0d2800000c\",\"userEmail\":\"ethitrans@docsmore.com\"},\"primaryKey\":\"_id\",\"firstNameKey\":\"null\",\"lastNameKey\":\"null\",\"apikey\":\"{ Document Flow API Key }\",\"createdOn\":\"\\\"2017-04-21T20:34:24.471Z\\\"\"}]", 
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()));
    }

}
